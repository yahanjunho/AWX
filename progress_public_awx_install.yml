---
- name: test
  hosts: localhost
  tasks:
    - include_vars: vars.yml

#    - name: default set_fact, docker_installation == 'n'
#      set_fact:
#        docker_installation: n


    - name: docker/docker-compose install
      include_tasks: docker_install.yml
      when: docker_installation == 'y'


    - name: 'check {{ awx_version }}'
      set_fact:
        awx_version: "{{ awx_version }}"
        awx_release_tags: [ '1.0.0', '1.0.1', '1.0.2', '1.0.3', '1.0.4', '1.0.5', '1.0.6', '1.0.7', '1.0.8', '2.0.0', '2.1.0', '2.1.1', '2.1.2', 
                            '3.0.0', '3.0.1', '4.0.0', '5.0.0', '6.0.0', '6.1.0', '7.0.0', '8.0.0', '9.0.0', '9.0.1', '9.1.0', '9.1.1', '9.2.0', '9.3.0', 
                            '10.0.0','11.0.0','11.1.0','11.2.0','12.0.0','13.0.0','14.0.0','14.1.0','15.0.0','15.0.1', '16.0.0', '17.0.0', '17.0.1', '17.1.0' ]

    - name: Fail
      fail:
      when: awx_version not in awx_release_tags


#    - name: prerequirement install
#      yum:
#        name: "{{ item }}"
#        state: latest
#        update_cache: yes
#      with_items:
#        - epel-release
#        - git
#        - gettext
#        - ansible
#        - nodejs
#        - npm
#        - gcc
#        - gcc-c++
#        - bzip2
#        - python-pip

    - name: prerequirement install
      shell: "yum install -y {{ item }}"
      with_items:
        - epel-release
        - git
        - gettext
        - ansible
        - nodejs
        - npm
        - gcc
        - gcc-c++
        - bzip2
        - python-pip
      
     

    - name: pip docker install
      shell: "pip install docker"

 
    # - name: install etc
    #   yum:
    #     name: "{{ item }}"
    #     state: latest
    #     update_cache: yes
    #   with_items:
    #     - wget
    #     - ntp
    #     - google-authenticator
    #     - zlib-devel
    #     - bzip2
    #     - bzip2-devel
    #     - bzie2-develcurl
    #     - libffi-devel
    #     - make
    #     - openssl-devel
    #     - readline-devel
    #     - sqlite
    #     - sqlite-devel
    #     - xz
    #     - xz-devel
    #     - zlib-devel
    #     - google-chrome-stable
    #     - unzip



#    - name: git awx source clone
#      git:
#        repo: https://github.com/ansible/awx.git
#        dest: /root/awx_git_clone/
#        version: "{{ awx_version }}"
#        clone: yes
#        update: no
#        force: yes

    - name: check, /root/awx_git_clone
      stat:
        path: /root/awx_git_clone
      register: stat_register


    - name: rm -rf /root/awx_git_clone
      file:
        path: /root/awx_git_clone
        state: absent
      when: stat_register.stat.exists == True      
      

    - name: git awx source clone
      shell: "git clone  https://github.com/ansible/awx.git awx_git_clone"
      args:
        chdir: /root/


    - name: "git checkout tags/{{ awx_version }}"
      shell: "git checkout tags/{{ awx_version }}"
      args:
        chdir: /root/awx_git_clone/


    - name: inventory config, python path
      lineinfile:
        path: /root/awx_git_clone/installer/inventory
        regexp: '^localhost ansible_connection=local ansible_python_interpreter='
        line: 'localhost ansible_connection=local ansible_python_interpreter={{ python_path }}'
 

    - name: inventory config, postgres_data_dir
      lineinfile:
        path: /root/awx_git_clone/installer/inventory
        regexp: '^postgres_data_dir'
        line: 'postgres_data_dir=/opt/awxdb_{{ awx_version }}'

    
    - name: inventory config, docker_compose_dir
      lineinfile:
        path: /root/awx_git_clone/installer/inventory
        regexp: '^docker_compose_dir'
        line: 'docker_compose_dir=/opt/awxcompose_{{ awx_version }}'


    - name: 'mkdir /opt/awxdb_{{ awx_version }}, /opt/awxcompose_{{ awx_version }}'
      file:
        path: /opt/{{ item }}
        state: directory
      with_items:
        - 'awxdb_{{ awx_version }}'
        - 'awxcompose_{{ awx_version }}'


    - name: make docker-compose
      shell: "ansible-playbook -i inventory install.yml"
      args:
        chdir: /root/awx_git_clone/installer/


    - name: docker-compose up -d
      shell: "docker-compose up -d"
      args:
        chdir: '/opt/awxcompose_{{ awx_version }}/'
